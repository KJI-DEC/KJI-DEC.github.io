I"T<p><a href="https://www.inflearn.com/course/database-2-mysql-강좌/dashboard">강의 링크</a></p>

<p><br /></p>

<h3 id="섹션2---mysql-기본">섹션2 - MySQL 기본</h3>

<p><strong>MySQL 구조</strong></p>

<p><img src="https://user-images.githubusercontent.com/71377968/160275682-96047b3c-94a8-43f2-8700-969ab1f5ee26.png" alt="image" /></p>

<ul>
  <li>표(table): 정보가 저장되는 곳</li>
  <li>데이터베이스(database)/스키마(schema): 연관된 표를 모아놓은 곳(directory와 비슷)</li>
  <li>데이터베이스 서버(database server): 스키마를 모아놓은 곳</li>
</ul>

<p><br /></p>

<p><strong>데이터베이스 효용</strong></p>

<ul>
  <li>보안성 - 자체적인 보안시스템이 있으므로 좀 더 보안성이 좋음</li>
  <li>권한 기능 - 사람 별로 읽기/쓰기 등의 기능을 부여할 수 있음
    <ul>
      <li>일반적으로 root는 admin임</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<p>MySQL에 로그인하는 것은 데이터베이스 서버에 접속하는 것. 아래 명령어를 입력한 후 패스워드를 입력하면 MySQL 서버에 접속할 수 있음. 이때 p 옵션은 패스워드 입력 옵션이므로 비밀번호가 설정되지 않은 userId로 접속한다면 해당 옵션은 필요없음</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mysql <span class="nt">-u</span><span class="o">[</span>userId] <span class="nt">-p</span>
</code></pre></div></div>

<p><br /></p>

<p>해당 <a href="https://dev.mysql.com/doc/refman/8.0/en/tutorial.html">링크</a>는 MySQL 8.0 공식 문서임. 해당 문서에서 명령어 등을 확인할 수 있음</p>

<p><br /></p>

<p><strong>데이터베이스 만들기</strong>: create 명령어 사용</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="p">[</span><span class="n">db_name</span><span class="p">];</span>
</code></pre></div></div>

<ul>
  <li>create database 명령 입력 후 내가 만들고자 하는 데이터베이스 이름을 작성해주면 됨</li>
  <li>이때, 항상 명령 끝에는 세미콜론(;)을 붙여야 함</li>
</ul>

<p><img src="https://user-images.githubusercontent.com/71377968/160275733-0008eaa5-359a-4c33-a22b-582e5bce5f5f.png" alt="image" /></p>

<ul>
  <li>사실, CREATE, DATABASE와 같은 SQL 예약어는 대문자로 쓰는 게 좋지만 SQL문은 대소문자를 구분하지 않기 때문에 크게 상관은 없다. 오라클과 같은 곳에서는 해슁 같은 걸 사용하고 기록을 확인하기 때문에 구분해서 쓰는 게 좋다고 한다. 나중에 팀으로 일하게 될 때 정해진 규율대로 쓰도록 하자!</li>
  <li>쿼리문이 성공하면 두번째줄에 나온 문구가 나옴</li>
</ul>

<p><br /></p>

<p><strong>데이터베이스 리스트 조회</strong>: show 명령어 사용</p>

<p><img src="https://user-images.githubusercontent.com/71377968/160275748-6581c131-75a6-4081-94b5-5fddbc670342.png" alt="image" /></p>

<ul>
  <li>tutorial database가 잘 생성되어있음을 확인함</li>
</ul>

<p><br /></p>

<p><strong>데이터베이스 사용</strong>: use 명령어 사용</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">USE</span> <span class="p">[</span><span class="n">db_name</span><span class="p">];</span>
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/71377968/160275765-5c53e150-4ab1-41a1-8b0d-26bae43eda94.png" alt="image" /></p>

<ul>
  <li>use 명령어를 사용하여 제대로 데이터베이스에 들어가게 되면 데이터베이스가 바뀌었다는 문구가 뜸</li>
</ul>

<p><br /></p>

<p>SQL: <strong>S</strong>tructured <strong>Q</strong>uery <strong>L</strong>anguage</p>

<ul>
  <li>Structured: 표로 정리되어 구조화 된 것</li>
  <li>Query: 데이터베이스에게 무언가를 요청</li>
  <li>Language: 데이터베이스와 사용자의 약속</li>
</ul>

<p>특징: 쉬움, 중요함( + 표준화된 언어임)</p>

<p><br /></p>

<p><strong>표의 구성</strong></p>

<p><img src="https://user-images.githubusercontent.com/71377968/160275770-7d526921-edc8-44f2-b00f-ba90b4fea04c.png" alt="image" /></p>

<ul>
  <li>column은 데이터의 type이라고 생각하면 됨</li>
  <li>row는 데이터 하나하나라고 생각하면 됨</li>
</ul>

<p><br /></p>

<p><br /></p>

<h3 id="섹션3---mysql-테이블의-생성">섹션3 - MySQL 테이블의 생성</h3>

<p>아래의 명령어를 통해 테이블을 생성할 수 있음.</p>

<p><img src="https://user-images.githubusercontent.com/71377968/160275781-7f588c28-dd80-4273-8bda-2ae31792bb11.png" alt="image" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="p">[</span><span class="k">table_name</span><span class="p">](</span>
	<span class="p">[</span><span class="n">variable_name</span><span class="p">]</span> <span class="p">[</span><span class="k">type</span><span class="p">]</span> <span class="p">[</span><span class="k">NULL</span><span class="o">/</span><span class="k">NOT</span> <span class="k">NULL</span><span class="p">]</span> <span class="p">[</span><span class="n">optional</span> <span class="o">-</span> <span class="n">AUTO_INCREMENT</span><span class="p">],</span>
	<span class="p">...</span>
	<span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">(</span><span class="n">key_name</span><span class="p">));</span>
</code></pre></div></div>

<ul>
  <li>위처럼 각 column의 이름을 지정하고 type과 NULL 가능성 유무, 그리고 숫자 타입의 데이터의 경우, 자동으로 숫자를 하나씩 증가시켜주는 명령어를 사용하여 테이블을 작성함</li>
  <li>가장 마지막에는 각 데이터를 대표하는, 중복되어서는 안되는 변수인 primary key의 이름을 써주면 됨</li>
  <li>나의 경우, 위 명령어를 사용했더니 warning이 떠서 warning이 뭔지 확인해봄. 아래와 같이 그냥 int 타입을 보여줄 때 길이를 정하는 기능이 없어질 수 있다는 것이었음. 딱히 중요한 warning이 아니었으므로 넘어가기로 함!</li>
</ul>

<p><img src="https://user-images.githubusercontent.com/71377968/160275795-f83882a8-ae78-4fad-9d78-a8722f80467a.png" alt="image" /></p>

<ul>
  <li>table이 잘 생성되었는지 확인할 때에는 <code class="language-plaintext highlighter-rouge">SHOW TABLES</code> 명령어를 사용하면 됨</li>
</ul>
:ET